diff --git a/src/common/string_view.h b/src/common/string_view.h
index aa01db8b..8f6d3ec3 100644
--- a/src/common/string_view.h
+++ b/src/common/string_view.h
@@ -33,6 +33,7 @@
 #include <cassert>
 #include <cstring>
 #include <ostream>
+#include <algorithm>
 #include "common/using_std_string.h"
 
 namespace google_breakpad {
diff --git a/src/google_breakpad/common/minidump_exception_linux.h b/src/google_breakpad/common/minidump_exception_linux.h
index 6138d5d7..a9d1477a 100644
--- a/src/google_breakpad/common/minidump_exception_linux.h
+++ b/src/google_breakpad/common/minidump_exception_linux.h
@@ -46,7 +46,7 @@
 
 /* For (MDException).exception_code.  These values come from bits/signum.h.
  */
-typedef enum {
+typedef enum : uint32_t {
   MD_EXCEPTION_CODE_LIN_SIGHUP = 1,      /* Hangup (POSIX) */
   MD_EXCEPTION_CODE_LIN_SIGINT = 2,      /* Interrupt (ANSI) */
   MD_EXCEPTION_CODE_LIN_SIGQUIT = 3,     /* Quit (POSIX) */
diff --git a/src/google_breakpad/common/minidump_exception_mac.h b/src/google_breakpad/common/minidump_exception_mac.h
index e53edc5d..f4d314a7 100644
--- a/src/google_breakpad/common/minidump_exception_mac.h
+++ b/src/google_breakpad/common/minidump_exception_mac.h
@@ -46,7 +46,7 @@
 /* For (MDException).exception_code.  Breakpad minidump extension for Mac OS X
  * support.  Based on Darwin/Mac OS X' mach/exception_types.h.  This is
  * what Mac OS X calls an "exception", not a "code". */
-typedef enum {
+typedef enum : uint32_t {
   /* Exception code.  The high 16 bits of exception_code contains one of
    * these values. */
   MD_EXCEPTION_MAC_BAD_ACCESS      = 1,  /* code can be a kern_return_t */
@@ -76,7 +76,7 @@ typedef enum {
 /* For (MDException).exception_flags.  Breakpad minidump extension for Mac OS X
  * support.  Based on Darwin/Mac OS X' mach/ppc/exception.h and
  * mach/i386/exception.h.  This is what Mac OS X calls a "code". */
-typedef enum {
+typedef enum : uint32_t {
   /* With MD_EXCEPTION_BAD_ACCESS.  These are relevant kern_return_t values
    * from mach/kern_return.h. */
   MD_EXCEPTION_CODE_MAC_INVALID_ADDRESS    =  1,
diff --git a/src/google_breakpad/common/minidump_exception_ps3.h b/src/google_breakpad/common/minidump_exception_ps3.h
index adff5a6b..a48da247 100644
--- a/src/google_breakpad/common/minidump_exception_ps3.h
+++ b/src/google_breakpad/common/minidump_exception_ps3.h
@@ -38,7 +38,7 @@
 
 #include "google_breakpad/common/breakpad_types.h"
 
-typedef enum {
+typedef enum : uint32_t {
   MD_EXCEPTION_CODE_PS3_UNKNOWN = 0,
   MD_EXCEPTION_CODE_PS3_TRAP_EXCEP = 1,
   MD_EXCEPTION_CODE_PS3_PRIV_INSTR = 2,
diff --git a/src/google_breakpad/common/minidump_exception_win32.h b/src/google_breakpad/common/minidump_exception_win32.h
index 4b5d57c8..ed53ca8c 100644
--- a/src/google_breakpad/common/minidump_exception_win32.h
+++ b/src/google_breakpad/common/minidump_exception_win32.h
@@ -47,7 +47,7 @@
 /* For (MDException).exception_code.  These values come from WinBase.h
  * and WinNT.h (names beginning with EXCEPTION_ are in WinBase.h,
  * they are STATUS_ in WinNT.h). */
-typedef enum {
+typedef enum : uint32_t {
   MD_EXCEPTION_CODE_WIN_CONTROL_C                = 0x40010005,
       /* DBG_CONTROL_C */
   MD_EXCEPTION_CODE_WIN_GUARD_PAGE_VIOLATION     = 0x80000001,
@@ -132,7 +132,7 @@ typedef enum {
  * | pbcopy  # on mac
  *
  * and then the last comma manually removed. */
-typedef enum {
+typedef enum : uint32_t {
   MD_NTSTATUS_WIN_STATUS_UNSUCCESSFUL = 0xC0000001,
   MD_NTSTATUS_WIN_STATUS_NOT_IMPLEMENTED = 0xC0000002,
   MD_NTSTATUS_WIN_STATUS_INVALID_INFO_CLASS = 0xC0000003,
